{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","name","type","id","className","alt","src","style","textTransform","idZeros","CardList","pokemons","filter","pokemon","map","i","key","Scroll","props","overflowY","border","height","children","SearchBox","searchChange","placeholder","onChange","ErrorBoundry","state","hasError","this","setState","Component","App","fetchPokemons","a","fetch","page","response","json","pokeurls","Promise","all","results","url","response2","promises","resp","data","onSearchChange","event","searchfield","target","value","pageUp","up","console","log","filteredPokemons","toLowerCase","includes","margin","href","onClick","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d24593f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, type, id}) => {\r\n    const idZeros = (id) => {\r\n        if (id < 10){\r\n            return [0, 0];\r\n        } else if (id < 100) {\r\n            return 0;\r\n        }   else {\r\n            return;\r\n        }\r\n    }\r\n    return (\r\n        <div className='tc bg-washed-yellow dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt={name} src={id <= 721 ? `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-vi/x-y/${id}.png` : `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-viii/icons/${id}.png`}></img>\r\n            <h2 style={{textTransform: \"capitalize\"}}>Name: {name}</h2>\r\n            <p>\r\n                Id:#{[idZeros(id), id]}\r\n                <br></br>\r\n                Type/s: {type}\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({pokemons}) => {\r\nreturn (\r\n<div className='bg-gold'>\r\n{   pokemons.filter(pokemon => pokemon.id <= 893).map((pokemon, i) => {\r\n       return <Card \r\n                        key={i}\r\n                        name={pokemon.name}\r\n                        id={pokemon.id}\r\n                        type={pokemon.name}\r\n                        />;\r\n                       \r\n                        \r\n                        \r\n})}\r\n</div>\r\n)\r\n};\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '5px solid rgba(86, 148, 209, 0.3)', height:'700px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type=\"search\" \r\n            placeholder=\"Search Pokemons\"\r\n            onChange={searchChange}\r\n            ></input>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n    return this.state.hasError ? \r\n            <h1>Oops, Something went wrong..</h1>\r\n            :\r\n            this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\nimport CardList from '../components/CardList'\nimport Scroll from '../components/Scroll'\nimport SearchBox from '../components/SearchBox'\nimport ErrorBoundry from '../components/ErrorBoundry'\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n            pokemons: [],\n            searchfield: '',\n            page: 0,\n                };\n};\nasync componentDidMount() {\n      await this.fetchPokemons(0);\n}\n\nfetchPokemons = async () => {\n  const response = await fetch(`https://pokeapi.co/api/v2/pokemon?offset=${this.state.page*20}&limit=20`)\n  const pokeurls = await response.json();\n  const response2 = await Promise.all(pokeurls.results.map(url => {\n    return fetch(url.url);\n  }))\n  const promises = response2.map(async resp => await resp.json())\n  const data = await Promise.all(promises)\n  this.setState({ pokemons: data });\n}\n\nonSearchChange = (event) => {\n  this.setState({ searchfield: event.target.value });\n}\n\npageUp = async (up) => {\n  if(up && this.state.page < 44){\n    await this.setState({page: this.state.page+1})\n  } else if (!up && this.state.page !== 0) {\n    await this.setState({page: this.state.page-1})\n  }\n\n  await this.fetchPokemons();\n  console.log(this.state.pokemons)\n}\n\n  render() {\n    let {pokemons, searchfield} = this.state;\n\n    const filteredPokemons = pokemons.filter(pokemon => {\n      return pokemon.name.toLowerCase().includes(searchfield.toLowerCase());\n  })\n    return (\n    <div className='app tc bg-red'>\n    <h1 className='f1' style={{margin:0}}>Pokedex!</h1>\n    <h3>Using the <a href='https://pokeapi.co/' target='_blank'>PokeAPI</a></h3>\n    <button onClick={() => {this.pageUp(false)}}>Page down</button>\n    <button onClick={() => {this.pageUp(true)}}>Page up</button>\n    <p>Page: {this.state.page}</p>\n    <SearchBox searchChange={this.onSearchChange}/>\n    <Scroll>\n    <ErrorBoundry>\n    <CardList pokemons={filteredPokemons}/>\n    </ErrorBoundry>\n    </Scroll>\n    </div>)\n  }\n    \n  \n    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}